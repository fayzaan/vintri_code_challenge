let self = {}

self.BadRequest = { status: '400', title: 'Bad Request' }
self.Unauthorized = { status: '401', title: 'Unauthorized' }
self.PaymentRequired = { status: '402', title: 'Payment Required' }
self.Forbidden = { status: '403', title: 'Forbidden' }
self.NotFound = { status: '404', title: 'Not Found' }
self.MethodNotAllowed = { status: '405', title: 'Method Not Allowed' }
self.NotAcceptable = { status: '406', title: 'Not Acceptable' }
self.ProxyAuthenticationRequired = { status: '407', title: 'Proxy Authentication Required' }
self.RequestTimeout = { status: '408', title: 'Request Time-out' }
self.Conflict = { status: '409', title: 'Conflict' }
self.Gone = { status: '410', title: 'Gone' }
self.LengthRequired = { status: '411', title: 'Length Required' }
self.PreconditionFailed = { status: '412', title: 'Precondition Failed' }
self.RequestEntityTooLarge = { status: '413', title: 'Request Entity Too Large' }
self.RequesturiTooLarge = { status: '414', title: 'Request-URI Too Large' }
self.UnsupportedMediaType = { status: '415', title: 'Unsupported Media Type' }
self.RequestedRangeNotSatisfiable = { status: '416', title: 'Requested Range Not Satisfiable' }
self.ExpectationFailed = { status: '417', title: 'Expectation Failed' }
self.ImATeapot = { status: '418', title: 'I\'m a teapot' }
self.UnprocessableEntity = { status: '422', title: 'Unprocessable Entity' }
self.Locked = { status: '423', title: 'Locked' }
self.FailedDependency = { status: '424', title: 'Failed Dependency' }
self.UnorderedCollection = { status: '425', title: 'Unordered Collection' }
self.UpgradeRequired = { status: '426', title: 'Upgrade Required' }
self.PreconditionRequired = { status: '428', title: 'Precondition Required' }
self.TooManyRequests = { status: '429', title: 'Too Many Requests' }
self.RequestHeaderFieldsTooLarge = { status: '431', title: 'Request Header Fields Too Large' }
self.InternalServer = { status: '500', title: 'Internal Server Error' }
self.NotImplemented = { status: '501', title: 'Not Implemented' }
self.BadGateway = { status: '502', title: 'Bad Gateway' }
self.ServiceUnavailable = { status: '503', title: 'Service Unavailable' }
self.GatewayTimeout = { status: '504', title: 'Gateway Time-out' }
self.HttpVersionNotSupported = { status: '505', title: 'HTTP Version Not Supported' }
self.VariantAlsoNegotiates = { status: '506', title: 'Variant Also Negotiates' }
self.InsufficientStorage = { status: '507', title: 'Insufficient Storage' }
self.BandwidthLimitExceeded = { status: '509', title: 'Bandwidth Limit Exceeded' }
self.NotExtended = { status: '510', title: 'Not Extended' }
self.NetworkAuthenticationRequired = { status: '511', title: 'Network Authentication Required' }

self.BadDigest = { status: '400', title: 'Bad Request' }
self.BadMethod = { status: '405', title: 'Method Not Allowed' }
self.Internal = { status: '500', title: 'Internal Server Error' }
self.InvalidArgument = { status: '409', title: 'Conflict' }
self.InvalidContent = { status: '400', title: 'Bad Request' }
self.InvalidCredentials = { status: '401', title: 'Unauthorized' }
self.InvalidHeader = { status: '400', title: 'Bad Request' }
self.InvalidVersion = { status: '400', title: 'Bad Request' }
self.MissingParameter = { status: '409', title: 'Conflict' }
self.NotAuthorized = { status: '403', title: 'Forbidden' }
self.RequestExpired = { status: '400', title: 'Bad Request' }
self.RequestThrottled = { status: '429', title: 'Too Many Requests' }
self.ResourceNotFound = { status: '404', title: 'Not Found' }
self.WrongAccept = { status: '406', title: 'Not Acceptable' }

module.exports = self